openapi: 3.0.0
info:
  title: Help Aid Africa Box Tracking API
  description: |
    This is the official helpaidafrica.org box tracking api
  termsOfService: http://helpaidafrica.org/terms/api
  contact:
    email: info@helpaidafrica.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Help Aid Africa
  url: http://helpaidafrica.org
servers:
- url: https://virtserver.swaggerhub.com/bilgrami/helpaidafrica/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://track.helpaidafrica.org/v1
tags:
- name: box
  description: Everything about our boxes
  externalDocs:
    description: Find out more
    url: http://helpaidafrica.org/info/box
- name: shipment
  description: Our shipments
  externalDocs:
    description: about shipment
    url: http://helpaidafrica.org/info/shipment
- name: org
  description: Orgs we are helping
  externalDocs:
    description: Find out more about orgs
    url: http://helpaidafrica.org/info/org
- name: user
  description: Operations about user
paths:
  /box/findByStatus:
    get:
      tags:
      - box
      summary: Finds Boxes by status
      description: Multiple status values can be provided with comma separated strings
      operationId: find_boxes_by_status
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/BoxStatus'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Box'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Box'
        "400":
          description: Invalid status value
      security:
      - boxorg_auth:
        - write:boxes
        - read:boxes
      x-openapi-router-controller: swagger_server.controllers.box_controller
  /box/findByTags:
    get:
      tags:
      - box
      summary: Finds Boxes by tags
      description: Muliple tags can be provided with comma separated strings. Use\
        \ tag1, tag2, tag3 for testing.
      operationId: find_boxes_by_tags
      parameters:
      - name: tags
        in: query
        description: Tags to filter by
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: tag1
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Box'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Box'
        "400":
          description: Invalid tag value
      deprecated: false
      security:
      - boxorg_auth:
        - write:boxes
        - read:boxes
      x-openapi-router-controller: swagger_server.controllers.box_controller
  /box:
    put:
      tags:
      - box
      summary: Update an existing box
      operationId: update_box
      requestBody:
        $ref: '#/components/requestBodies/Box'
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Box not found
        "405":
          description: Validation exception
      security:
      - boxorg_auth:
        - write:boxes
        - read:boxes
      x-openapi-router-controller: swagger_server.controllers.box_controller
    post:
      tags:
      - box
      summary: Add a new box to the shipment
      operationId: add_box
      requestBody:
        $ref: '#/components/requestBodies/Box'
      responses:
        "405":
          description: Invalid input
      security:
      - boxorg_auth:
        - write:boxes
        - read:boxes
      x-openapi-router-controller: swagger_server.controllers.box_controller
  /box/{boxId}:
    get:
      tags:
      - box
      summary: Find box by ID
      description: Returns a single box
      operationId: get_box_by_id
      parameters:
      - name: boxId
        in: path
        description: ID of box to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Box'
            application/xml:
              schema:
                $ref: '#/components/schemas/Box'
        "400":
          description: Invalid ID supplied
        "404":
          description: Box not found
      security:
      - api_key: []
      x-openapi-router-controller: swagger_server.controllers.box_controller
    post:
      tags:
      - box
      summary: Updates a box in the org with form data
      operationId: update_box_with_form
      parameters:
      - name: boxId
        in: path
        description: ID of box that needs to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "405":
          description: Invalid input
      security:
      - boxorg_auth:
        - write:boxes
        - read:boxes
      x-openapi-router-controller: swagger_server.controllers.box_controller
    delete:
      tags:
      - box
      summary: Deletes a box
      operationId: delete_box
      parameters:
      - name: api_key
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: boxId
        in: path
        description: Box id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Box not found
      security:
      - boxorg_auth:
        - write:boxes
        - read:boxes
      x-openapi-router-controller: swagger_server.controllers.box_controller
  /box/{boxId}/uploadImage:
    post:
      tags:
      - box
      summary: uploads an image
      operationId: upload_file
      parameters:
      - name: boxId
        in: path
        description: ID of box to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - boxorg_auth:
        - write:boxes
        - read:boxes
      x-openapi-router-controller: swagger_server.controllers.box_controller
  /box/inventory:
    get:
      tags:
      - box
      summary: Returns box inventories by status
      description: Returns a map of box status codes to quantities
      operationId: get_inventory_by_box_status
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
      security:
      - api_key: []
      x-openapi-router-controller: swagger_server.controllers.box_controller
  /org/{orgId}:
    get:
      tags:
      - org
      summary: Find Org by ID
      description: Returns a single Org
      operationId: get_org_by_id
      parameters:
      - name: orgId
        in: path
        description: ID of Org to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Org'
            application/xml:
              schema:
                $ref: '#/components/schemas/Org'
        "400":
          description: Invalid ID supplied
        "404":
          description: Org not found
      security:
      - boxorg_auth:
        - write:orgs
        - read:orgs
      - api_key: []
      x-openapi-router-controller: swagger_server.controllers.org_controller
  /org/inventory:
    get:
      tags:
      - org
      summary: Returns box inventories by org
      description: Returns a map of org names to quantities
      operationId: get_inventory_by_org
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
      security:
      - boxorg_auth:
        - write:orgs
        - read:orgs
      - api_key: []
      x-openapi-router-controller: swagger_server.controllers.org_controller
  /shipment/{shipmentId}:
    get:
      tags:
      - shipment
      summary: Find Shipment by ID
      description: Info about a single Shipment
      operationId: get_shipment_by_id
      parameters:
      - name: shipmentId
        in: path
        description: ID of Shipment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shipment'
        "400":
          description: Invalid ID supplied
        "404":
          description: Shipment not found
      security:
      - boxorg_auth:
        - write:shipments
        - read:shipments
      - api_key: []
      x-openapi-router-controller: swagger_server.controllers.shipment_controller
  /shipment/inventory:
    get:
      tags:
      - shipment
      summary: Returns box inventories by shipment
      description: Returns a map of shipments to quantities
      operationId: get_inventory_by_shipment
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
                x-content-type: application/json
      security:
      - boxorg_auth:
        - write:shipments
        - read:shipments
      - api_key: []
      x-openapi-router-controller: swagger_server.controllers.shipment_controller
  /user:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: create_user
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/createWithArray:
    post:
      tags:
      - user
      summary: Creates list of users with given input array
      operationId: create_users_with_array_input
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/createWithList:
    post:
      tags:
      - user
      summary: Creates list of users with given input array
      operationId: create_users_with_list_input
      requestBody:
        $ref: '#/components/requestBodies/UserArray'
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: login_user
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
            application/xml:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logout_user
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/{username}:
    get:
      tags:
      - user
      summary: Get user by user name
      operationId: get_user_by_name
      parameters:
      - name: username
        in: path
        description: The name that needs to be fetched. Use user1 for testing.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
    put:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: update_user
      parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "400":
          description: Invalid user supplied
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: delete_user
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
components:
  schemas:
    AuditInfo:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
        createdByUserId:
          type: integer
        createdLocation:
          $ref: '#/components/schemas/Location'
        lastUpdatedDate:
          type: string
          format: date-time
        lastUpdatedByUserId:
          type: integer
        lastUpdatedLocation:
          $ref: '#/components/schemas/Location'
      example:
        createdByUserId: 0
        createdLocation:
          latitude: 37.421049
          longitude: -121.9603369
        lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
        createdDate: 2000-01-23T04:56:07.000+00:00
        lastUpdatedLocation: null
        lastUpdatedByUserId: 6
      xml:
        name: AuditInfo
    Location:
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          maximum: 90
          minimum: -90
          type: number
          description: Latitude
          format: float
          example: 37.421049
        longitude:
          maximum: 180
          minimum: -180
          type: number
          description: Longitude
          format: float
          example: -121.9603369
      example:
        latitude: 37.421049
        longitude: -121.9603369
      xml:
        name: Location
    Shipment:
      required:
      - shipmentId
      type: object
      properties:
        shipmentId:
          type: string
          example: 2020-08-A
        startdate:
          type: string
          format: date-time
        deliverydate:
          type: string
          format: date-time
        startlocation:
          $ref: '#/components/schemas/Location'
        finalDestination:
          $ref: '#/components/schemas/Location'
        active:
          type: boolean
          default: true
        complete:
          type: boolean
          default: false
        shipmentnotes:
          type: string
          description: notes about the shipment
        deliverynotes:
          type: string
          description: notes about the delivery
        notes:
          type: string
          description: Internal notes about shipment
        auditInfo:
          $ref: '#/components/schemas/AuditInfo'
      example:
        auditInfo:
          createdByUserId: 0
          createdLocation:
            latitude: 37.421049
            longitude: -121.9603369
          lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
          createdDate: 2000-01-23T04:56:07.000+00:00
          lastUpdatedLocation: null
          lastUpdatedByUserId: 6
        notes: notes
        shipmentId: 2020-08-A
        shipmentnotes: shipmentnotes
        finalDestination: null
        active: true
        deliverynotes: deliverynotes
        startdate: 2000-01-23T04:56:07.000+00:00
        complete: false
        deliverydate: 2000-01-23T04:56:07.000+00:00
        startlocation:
          latitude: 37.421049
          longitude: -121.9603369
      xml:
        name: Shipment
    Org:
      required:
      - name
      - orgId
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        name:
          type: string
          example: Mesa Marai
        description:
          type: string
        contactFirstName:
          type: string
        contactLastName:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        province:
          type: string
        country:
          type: string
        email:
          type: string
        phone:
          type: string
        notes:
          type: string
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        active:
          type: boolean
          default: true
        auditInfo:
          $ref: '#/components/schemas/AuditInfo'
      example:
        country: country
        address: address
        notes: notes
        photoUrls:
        - photoUrls
        - photoUrls
        city: city
        contactFirstName: contactFirstName
        description: description
        active: true
        orgId: 0
        tags:
        - name: tag1
          active: true
        - name: tag1
          active: true
        auditInfo:
          createdByUserId: 0
          createdLocation:
            latitude: 37.421049
            longitude: -121.9603369
          lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
          createdDate: 2000-01-23T04:56:07.000+00:00
          lastUpdatedLocation: null
          lastUpdatedByUserId: 6
        province: province
        phone: phone
        name: Mesa Marai
        contactLastName: contactLastName
        state: state
        email: email
      xml:
        name: Org
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
      example:
        firstName: firstName
        lastName: lastName
        password: password
        userStatus: 6
        phone: phone
        id: 0
        email: email
        username: username
      xml:
        name: User
    Tag:
      type: object
      properties:
        name:
          type: string
          example: tag1
        active:
          type: boolean
          example: true
          default: true
      example:
        name: tag1
        active: true
      xml:
        name: Tag
    BoxStatus:
      type: array
      xml:
        name: BoxStatus
      items:
        type: string
        nullable: true
        default: created
        enum:
        - created
        - packaged
        - shipping
        - delivered
        - partially damaged
        - damaged
        - lost
        - duplicate
        - diverted
        - null
    Box:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          example: S237
        shipment:
          type: string
          example: 2020-08-A
        org:
          type: string
          example: Mesa Marai
        size:
          type: string
          default: 20x20x20
          enum:
          - 20x20x20
          - 10x10x10
        barcode:
          type: string
          example: 2020-08-A-Box-1-Womens Clothes-Western [43]
        barcodeImage:
          type: string
        qrcode:
          type: string
          example: /where-is-my-donation-box?id=2020-08-A-Box-1
        qrcodeImage:
          type: string
        notes:
          type: string
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          $ref: '#/components/schemas/BoxStatus'
        active:
          type: boolean
          default: true
        auditInfo:
          $ref: '#/components/schemas/AuditInfo'
      example:
        shipment: 2020-08-A
        notes: notes
        photoUrls:
        - photoUrls
        - photoUrls
        org: Mesa Marai
        qrcode: /where-is-my-donation-box?id=2020-08-A-Box-1
        active: true
        barcodeImage: barcodeImage
        qrcodeImage: qrcodeImage
        tags:
        - name: tag1
          active: true
        - name: tag1
          active: true
        auditInfo:
          createdByUserId: 0
          createdLocation:
            latitude: 37.421049
            longitude: -121.9603369
          lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
          createdDate: 2000-01-23T04:56:07.000+00:00
          lastUpdatedLocation: null
          lastUpdatedByUserId: 6
        size: 20x20x20
        id: S237
        barcode: 2020-08-A-Box-1-Womens Clothes-Western [43]
        status:
        - created
        - created
      xml:
        name: Box
    BoxTrackingInfo:
      required:
      - box
      - date
      - id
      - location
      - status
      - userId
      type: object
      properties:
        id:
          type: integer
          format: int64
        box:
          $ref: '#/components/schemas/Box'
        date:
          type: string
          format: date-time
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        userId:
          $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/BoxStatus'
        location:
          $ref: '#/components/schemas/Location'
        complete:
          type: boolean
          default: false
        auditInfo:
          $ref: '#/components/schemas/AuditInfo'
      xml:
        name: BoxTrackingInfo
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      example:
        code: 0
        type: type
        message: message
    body:
      required:
      - userId
      type: object
      properties:
        status:
          type: string
          description: Updated status of the box
        notes:
          type: string
          description: Updated notes about the box
        userId:
          type: string
          description: Id of the user performing the operation
        location:
          type: string
          description: latLong of the user
          example: 37.421049,37.421049
        tags:
          type: array
          description: Tags to be updated
          items:
            type: string
  requestBodies:
    Org:
      description: Org object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Org'
        application/xml:
          schema:
            $ref: '#/components/schemas/Org'
      required: false
    Shipment:
      description: Shipment object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Shipment'
        application/xml:
          schema:
            $ref: '#/components/schemas/Shipment'
      required: true
    Box:
      description: Box object that needs to be added to the shipment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Box'
        application/xml:
          schema:
            $ref: '#/components/schemas/Box'
      required: true
    BoxTrackingInfo:
      description: Box Tracking object used to track a box
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BoxTrackingInfo'
        application/xml:
          schema:
            $ref: '#/components/schemas/BoxTrackingInfo'
      required: true
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      required: true
  securitySchemes:
    boxorg_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://track.helpaidafrica.org/oauth/dialog
          scopes:
            write:boxes: modify boxes in your account
            read:boxes: read your boxes
            write:orgs: modify orgs in your account
            read:orgs: read orgs boxes
            write:shipments: modify shipments in your account
            read:shipments: read your shipments
      x-tokenInfoFunc: swagger_server.controllers.authorization_controller.check_boxorg_auth
      x-scopeValidateFunc: swagger_server.controllers.authorization_controller.validate_scope_boxorg_auth
    api_key:
      type: apiKey
      name: api_key
      in: header
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_api_key

